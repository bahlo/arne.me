---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, WORK_DESCRIPTION } from "../../consts";

const title = "Work";
const description = "My work experience";
const experience = [
  {
    from: 2019,
    to: "Present",
    title: "Team Lead",
    company: "Axiom, Inc.",
    location: "Remote",
    tasks: [
      "Built a highly-scalable Go service around an existing custom database library",
      "Built a public demo that can be run locally using docker-compose",
      "Worked with customers to help use and integrate the product",
      "Built an end-to-end test pipeline using Cucumber and Go",
      "Worked on various data-shipping solutions including a log-synthesizer, Hacker New and GitHub events",
      "Developed and maintained the Axiom Vercel integration",
      "Built axiom-rs, an ergonomic Rust SDK for Axiom",
      "Lead a Developer Experience team of 3 engineers, owning the integrations, SDKs and other open-source projects",
    ],
  },
  {
    from: 2017,
    to: 2019,
    title: "Software Architect",
    company: "FastBill GmbH",
    location: "Frankfurt am Main, Germany",
    tasks: [
      "Built a fast, cacheable, versioned frontend-architecture with Vue, AWS CloudFront and AWS Lambda@Edge",
      "Extracted parts of a PHP monolith into Go services",
      "Wrote a backend-for-frontend to provide a unified API and auth for the frontend",
      "Worked with an external provider to integrate advanced VAT return into a Go service",
    ],
  },
  {
    from: 2011,
    to: 2017,
    title: "Software Engineer",
    company: "SOLEDOS GmbH",
    location: "Gründau, Germany",
    tasks: [
      "Got my bachelors degree in Computer Science with an integrated degree program",
      "Worked on the main business application in PHP and JavaScript",
      "Wrote an iPad app in Swift to demo the application to potential customers",
      "Developed a distributed system consisting of Go and Node.js microservices",
      "Wrote my thesis about a distributed heterogeneous database layer",
    ],
  },
];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      title={`${title} — ${SITE_TITLE}`}
      description={WORK_DESCRIPTION}
      image="/work/og-image.png"
    />
  </head>
  <body>
    <Header />
    <main id="main">
      <section>
        <h1>{title}</h1>
        {
          experience.map((experience: Experience) => (
            <>
              <h2>
                {experience.title} at {experience.company}
              </h2>
              <span class="meta">
                {experience.from} → {experience.to} &middot;{" "}
                {experience.location}
              </span>
              <ul>
                {experience.tasks.map((task, i) => {
                  return <li key={i}>{task}</li>;
                })}
              </ul>
            </>
          ))
        }
      </section>
    </main>
    <Footer />
  </body>
</html>
