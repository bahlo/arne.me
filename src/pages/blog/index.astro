---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { BLOG_TITLE, BLOG_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

const posts = (await getCollection("blog"))
  .filter((post) => post.slug != "hello-world")
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .reduce((acc, post) => {
    const year = post.data.pubDate.getFullYear();
    if (acc[year]) {
      acc[year].push(post);
    } else {
      acc[year] = [post];
    }
    return acc;
  }, {});
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={BLOG_TITLE} description={BLOG_DESCRIPTION} image="/blog/og-image.png" />
  </head>
  <body>
    <Header />
    <main id="main">
      <section>
        <h1>Blog</h1>
        <p>
          Hey, here are some blog posts I’ve written. There’s an
          <a href="/blog/atom.xml">RSS Feed</a>, if you’re into that.
        </p>
        {
          Object.keys(posts)
            .sort((a, b) => b - a)
            .map((year) => (
              <>
                <h2>{year}</h2>
                {posts[year].map((post) => (
                  <>
                    <h3>
                      <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                    </h3>
                    <span class="meta">
                      <FormattedDate date={post.data.pubDate} />
                    </span>
                    <p>{post.data.description}</p>
                  </>
                ))}
              </>
            ))
        }
      </section>
    </main>
    <Footer />
  </body>
</html>
