---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import SubscribeForm from '../../components/SubscribeForm.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import {WEEKLY_TITLE, WEEKLY_DESCRIPTION} from '../../consts.js';

const issues = (await getCollection('weekly')).sort(
	(a, b) => b.data.date.valueOf() - a.data.date.valueOf()
).reduce((acc, issue) => {
  const year = issue.data.date.getFullYear();
  if (acc[year]) {
    acc[year].push(issue);
  } else {
    acc[year] = [issue];
  }
  return acc;
}, {});
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={WEEKLY_TITLE} description={WEEKLY_DESCRIPTION} />
  </head>
  <body>
    <Header />
      <main>
        <section>
          <h1>Weekly</h1>
          <p>Arne's Weekly is my newsletter, where I collect interesting stories 
             from all over the web every Sunday.<br />
             There's also an <a href="/weekly/atom.xml">RSS Feed</a> available.
          </p>

          <SubscribeForm />

          <h2>Archive</h2>
          {Object.keys(issues).sort((a, b) => b - a).map(year => (
            <h3>{year}</h3>
            <ul>
            {issues[year].map((issue) => (
              <li>
                <FormattedDate date={issue.data.date} />
                <a href={`/weekly/${issue.slug}/`}>{issue.data.title}</a>
              </li>
            ))}
            </ul>
          ))}
        </section>
      </main>
      <Footer />
	</body>
</html>
